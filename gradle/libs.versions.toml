[versions]
agp = "8.10.0"
androidDesugaring = "2.1.5"
angusMail = "2.0.3"
apacheTika = "3.2.1"
awsVersion = "2.32.7"
azureFunctions = "3.1.0"
azureStorage = "12.31.0"
bouncyCastle = "1.81"
bson = "5.5.1"
clamAv = "2.1.2"
coroutines = "1.10.2"
dokka = "2.0.0"
dynamodb = "2.32.7"
embedMongo = "4.20.1"
embeddedPostgres = "2.1.0"
embeddedRedis = "0.9.1"
exposed = "0.61.0"
firebaseAdmin = "9.5.0"
graalVmNative = "0.11.0"
guava = "33.4.8-jre"
hierynomusSshj = "0.40.0"
javaJwt = "4.5.0"
kaml = "0.85.0"
kbson = "0.5.0"
kotlin = "2.2.0"
kotlinHtmlJvm = "0.12.0"
kotlinLogging = "7.0.7"
kotlinXDatetime = "0.7.1"
kotlinXIO = "0.8.0"
kotlinXSerialization = "1.9.0"
kotlinerCli = "1.0.5"
kotlinxSerializationCsvDurable = "0.2.11"
ksp = "2.2.0-2.0.2"
ktor = "3.2.2"
lambdaJavaCore = "1.3.0"
lambdaJavaEvents = "3.16.1"
lambdaJavaLog4j2 = "1.6.0"
lettuce = "6.7.1.RELEASE"
lkGradleHelpers = "4.0.3"
logBackClassic = "1.5.18"
mcp = "0.6.0"
memcached = "2.4.8"
metadataExtractor = "2.19.0"
mongoDriver = "5.5.1"
okio = "3.15.0"
oneTimePass = "2.4.1"
orgCrac = "0.1.3"
postgresql = "42.7.7"
proguard = "7.7.0"
scrimage = "4.3.3"
sentry = "8.17.0"
serializationLibs = "1.9.0"
shadow = "8.1.1"
vanniktechMavenPublish = "0.34.0"
webauthn4jCore = "0.29.4.RELEASE"
xmlUtilJvm = "0.91.1"
ktMongo = "0.20.1"
versionCatalogUpdate = "1.0.0"

[libraries]
androidDesugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "androidDesugaring" }
angusMail = { module = "org.eclipse.angus:angus-mail", version.ref = "angusMail" }
apacheTika = { module = "org.apache.tika:tika-parsers", version.ref = "apacheTika" }
awsApiGateway = { module = "software.amazon.awssdk:apigatewaymanagementapi", version.ref = "awsVersion" }
awsCloudWatch = { module = "software.amazon.awssdk:cloudwatch", version.ref = "awsVersion" }
awsCrtClient = { module = "software.amazon.awssdk:aws-crt-client", version.ref = "awsVersion" }
awsLambda = { module = "software.amazon.awssdk:lambda", version.ref = "awsVersion" }
awsRds = { module = "software.amazon.awssdk:rds", version.ref = "awsVersion" }
awsS3 = { module = "software.amazon.awssdk:s3", version.ref = "awsVersion" }
awsSes = { module = "software.amazon.awssdk:ses", version.ref = "awsVersion" }
azureFunctions = { module = "com.microsoft.azure.functions:azure-functions-java-library", version.ref = "azureFunctions" }
azureStorage = { module = "com.azure:azure-storage-blob", version.ref = "azureStorage" }
bouncyCastleBcpkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncyCastle" }
bouncyCastleBcprov = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncyCastle" }
clamAv = { module = "xyz.capybara:clamav-client", version.ref = "clamAv" }
comLightningkiteKotlinxSerializationCsvDurable = { module = "com.lightningkite:kotlinx-serialization-csv-durable", version.ref = "kotlinxSerializationCsvDurable" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesJdk = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }
coroutinesReactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines" }
coroutinesTesting = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
dynamodb = { module = "software.amazon.awssdk:dynamodb", version.ref = "dynamodb" }
embedMongo = { module = "de.flapdoodle.embed:de.flapdoodle.embed.mongo", version.ref = "embedMongo" }
embeddedPostgres = { module = "io.zonky.test:embedded-postgres", version.ref = "embeddedPostgres" }
embeddedRedis = { module = "org.signal:embedded-redis", version.ref = "embeddedRedis" }
exposedCore = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposedJavaTime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposedJdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
firebaseAdmin = { module = "com.google.firebase:firebase-admin", version.ref = "firebaseAdmin" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hierynomusSshj = { module = "com.hierynomus:sshj", version.ref = "hierynomusSshj" }
javaJwt = { module = "com.auth0:java-jwt", version.ref = "javaJwt" }
kBson = { module = "com.github.jershell:kbson", version.ref = "kbson" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
kotlinXIO = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinXIO" }
kotlinCompiler = { module = "org.jetbrains.kotlin:kotlin-compiler", version.ref = "kotlin" }
kotlinHtmlJvm = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinHtmlJvm" }
kotlinLogging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlinLogging" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinStdLib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinTestJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinTestJs = { module = "org.jetbrains.kotlin:kotlin-test-js", version.ref = "kotlin" }
kotlinXDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinXDatetime" }
kotlinXJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinXSerialization" }
kotlinerCli = { module = "com.lightningkite:kotliner-cli", version.ref = "kotlinerCli" }
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktorCallLogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktorCioJvm = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorCore = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktorCors = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktorJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorNetty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktorTestHost = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }
ktorWebsockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
lambdaJavaCore = { module = "com.amazonaws:aws-lambda-java-core", version.ref = "lambdaJavaCore" }
lambdaJavaEvents = { module = "com.amazonaws:aws-lambda-java-events", version.ref = "lambdaJavaEvents" }
lambdaJavaLog4j2 = { module = "com.amazonaws:aws-lambda-java-log4j2", version.ref = "lambdaJavaLog4j2" }
lettuce = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }
lkGradleHelpers = { module = "com.lightningkite:lk-gradle-helpers", version.ref = "lkGradleHelpers" }
logBackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logBackClassic" }
mcp = { module = "io.modelcontextprotocol:kotlin-sdk", version.ref = "mcp" }
memcached = { module = "com.googlecode.xmemcached:xmemcached", version.ref = "memcached" }
metadataExtractor = { module = "com.drewnoakes:metadata-extractor", version.ref = "metadataExtractor" }
mongoBson = { module = "org.mongodb:bson", version.ref = "bson" }
mongoDriver = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongoDriver" }
ktMongo = { module = "dev.opensavvy.ktmongo:driver-coroutines", version.ref = "ktMongo" }
ktMongoMultiplatform = { module = "dev.opensavvy.ktmongo:bson-multiplatform", version.ref = "ktMongo" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
oneTimePass = { module = "dev.turingcomplete:kotlin-onetimepassword", version.ref = "oneTimePass" }
orgCrac = { module = "io.github.crac:org-crac", version.ref = "orgCrac" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
proguard = { module = "com.guardsquare:proguard-gradle", version.ref = "proguard" }
scrimage = { module = "com.sksamuel.scrimage:scrimage-core", version.ref = "scrimage" }
scrimageFormats = { module = "com.sksamuel.scrimage:scrimage-formats-extra", version.ref = "scrimage" }
scrimageWebP = { module = "com.sksamuel.scrimage:scrimage-webp", version.ref = "scrimage" }
sentry = { module = "io.sentry:sentry", version.ref = "sentry" }
serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
serializationCbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "serializationLibs" }
serializationProperties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties", version.ref = "serializationLibs" }
serializationProtobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serializationLibs" }
webauthn4jCore = { module = "com.webauthn4j:webauthn4j-core", version.ref = "webauthn4jCore" }
xmlUtilJvm = { module = "io.github.pdvrieze.xmlutil:serialization-jvm", version.ref = "xmlUtilJvm" }

[plugins]
androidApp = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
graalVmNative = { id = "org.graalvm.buildtools.native", version.ref = "graalVmNative" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
vanniktechMavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "vanniktechMavenPublish" }
versionCatalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdate" }
